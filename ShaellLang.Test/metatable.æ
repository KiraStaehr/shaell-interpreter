fn $meta_tables_can_be_added()
    # Arrange
    $tab1 = { a = 1, b = 2 }
    $tab2 = { c = 3, d = 4 }
    
    #Act
    $tab1:set_meta_table($tab2)
    
    #Assert
    $A:assert($tab1:c == 3, "meta table not added")
end

fn $meta_tables_can_be_added_with_table_lib()
    # Arrange
    $tab1 = { a = 1, b = 2 }
    $tab2 = { c = 3, d = 4 }
    
    #Act
    $T:set_meta_table($tab1, $tab2)
    
    #Assert
    $A:assert($tab1:c == 3, "meta table not added")
end

fn $meta_table_entries_are_shadowed()
    # Arrange
    $tab1 = { a = 1, b = 2, c = 5}
    $tab2 = { c = 3, d = 4 }
    
    #Act
    $tab1:set_meta_table($tab2)
    
    #Assert
    $A:assert($tab1:c == 5, "meta table entry not shadowed")
end

fn $meta_table_can_be_replaced()
    # Arrange
    $tab1 = { a = 1, b = 2, c = 5}
    $tab2 = { c = 3, d = 4 }
    $tab3 = { e = 5, f = 6 }
    
    #Act
    $tab1:set_meta_table($tab2)
    $tab1:set_meta_table($tab3)
    
    #Assert
    $A:assert($tab1:c == 5, "meta table entry not shadowed")
    $A:assert($tab1:e == 5, "meta table entry not added")
end

$A:describe("Test add meta table", $meta_tables_can_be_added)
#$A:describe("Test add meta table with table lib", $meta_tables_can_be_added_with_table_lib)
#$A:describe("Test table entries are shadowed", $meta_table_entries_are_shadowed)
#$A:describe("Test meta table can be replaced", $meta_table_can_be_replaced)